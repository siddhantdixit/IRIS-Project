<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>

<form class="quiz" style="display:inline-block;">
    <div class="quiz__inner">
        <div data-question="1" class="quiz__step--1 quiz__step--current quiz__step">
            <div id="myquestionspinner" class="container mx-auto" style="display:none">
                .loadingspinner
            </div>
            <div id="sidcont" class="container mx-auto">
                <form class="flex w-full max-w-sm mx-auto space-x-3">
                    <button id="crosswordbtn" class="flex-shrink-0 bg-purple-600 text-white text-base font-semibold py-2 px-4 rounded-lg shadow-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-purple-200" type="button">
                        <i class="bi bi-arrow-right"></i>
                    </button>
                </form>
            </div>
        </div>
    </div>
</form>


<div id="rightpanelmodal" style="display:none" class="fixed z-10 inset-0 overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">

        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>

        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="sm:flex sm:items-start">
                    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-green-100 sm:mx-0 sm:h-10 sm:w-10">

                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z" />
                        </svg>
                    </div>
                    <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
                        <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title"> Right Answer </h3>
                        <div class="mt-2">
                            <p class="text-sm text-gray-500"> Hurray! You have successfully completed Level #{current_level} now you can proceed to the next level! </p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button id="nextlevelbtn" type="button" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-purple-600 text-base font-medium text-white hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 sm:ml-3 sm:w-auto sm:text-sm"> Next Level </button>
                <button id="logoutbtn" type="button" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm"> Logout </button>
            </div>
        </div>
    </div>
</div>

<div id="wrongpanelmodal" style="display:none" class="fixed z-10 inset-0 overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">

        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>

        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="sm:flex sm:items-start">
                    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                    </div>
                    <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
                        <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title"> Wrong Answer </h3>
                        <div class="mt-2">
                            <p class="text-sm text-gray-500"> You have entered wrong answer. Try Again or you can use hint.</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button id="tryagainbtn" type="button" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-purple-600 text-base font-medium text-white hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 sm:ml-3 sm:w-auto sm:text-sm"> Try Again </button>
                <button id="hintbtn" type="button" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm"> Use Hint </button>
            </div>
        </div>
    </div>
</div>

script.
    $("#tryagainbtn").click(function(){
        $("#wrongpanelmodal").slideUp();
    });

    $("#nextlevelbtn").click(function(){
        location.reload();
    });

    $("#hintbtn").click(function(){
        var discordserver = window.open("https://discord.gg/A97Y9u5MMa", "_blank");
        discordserver.focus();
    });


    $("#logoutbtn").click(function(){
        //- location.reload();
        window.location.href = "/logout";
    });


    $("#crosswordbtn").click(function(){
        // var allAnswers = [];

        // for(i=0;i<words.length;i++)
        // {
        //     var number = words[i]['number'];
        //     var direction = words[i]['direction'][0];
        //     var answerLength = words[i]['answer'].length;
            
        //     var userAnswer = '';
        //     for(j=1;j<=answerLength;j++)
        //     {
        //         userAnswer+= $('input[id*=\''+direction+'-'+number+'-'+j+'\'').val();
        //     }

        //     allAnswers.push({
        //         number:number,
        //         direction:direction,
        //         answerLength:answerLength,
        //         userAnswer:userAnswer
        //     });

        // }

        // var obj = {};

        // let x = $('input.letter')
        // for(i=0;i<x.length;i++)
        // {
        //     let temp = x[i]['id'].split('+');

        //     if(temp.length>1)
        //     {
        //         let temp = x[i]['id'].split('+');

        //     }
        // }


        
        var allAnswers = {};

        for(i=0;i<words.length;i++)
        {
            var number = words[i]['number'];
            var direction = words[i]['direction'][0];
            var answerLength = words[i]['answer'].length;
            
            var userAnswer = '';
            for(j=1;j<=answerLength;j++)
            {
                // userAnswer+= $('input[id*=\''+direction+'-'+number+'-'+j+'\'').val();
                var place = `${direction}-${number}-${j}`;
                allAnswers[place] = $('input[id*=\''+direction+'-'+number+'-'+j+'\'').val();
            }

            // allAnswers.push({
            //     number:number,
            //     direction:direction,
            //     answerLength:answerLength,
            //     userAnswer:userAnswer
            // });

        }

        console.log(allAnswers);
        // encodeURIComponent(JSON.stringify(object_to_be_serialised))
        let userCrosswordInputs = encodeURIComponent(JSON.stringify(allAnswers));
        


        $("#sidcont").hide();
        $("#myquestionspinner").show();
        
        let obj = {
            answer:"sudoku",
            //- sudokuset:
            sudokuans: userCrosswordInputs
        };

        $.post("/level", obj)
            .done(function(result)
            {
                console.log(result.msg);
                if(result.msg == "NO")
                {
                // alert("Wrong Answer");
                    //- $("#wrongpanelmodal").slideDown();
                    console.log("Saved");
                
                }
                else if(result.msg == "YES")
                {
                    $("#rightpanelmodal").slideDown();
                }
            })
            .fail(function(result){
                console.log(result);
            })
            .always(function(){
                $("#sidcont").show();
                $("#myquestionspinner").hide();
        });

    });


    $( document ).ready(function() {
        
        $.get("/api/sudoku")
            .done(function(result){
                console.log(result);

                if(result.msg!="404")
                {
                    let sudokuInputs = JSON.parse(decodeURIComponent(result.sudokuAns));
                    console.log(sudokuInputs);


                    for(const property in sudokuInputs)
                    {
                        let sudoEle = sudokuInputs[property];
                        if(sudoEle.trim()!='')
                        {
                            $('input[id*=\''+property+'\'').val(sudoEle);
                        }
                    }


                    for(i=0;i<words.length;i++)
                    {
                        var number = words[i]['number'];
                        var direction = words[i]['direction'][0];

                        var place = `${direction}-${number}-1`;

                        checkWord($('input[id*=\''+place+'\''));
                    }

                }
            });
    });